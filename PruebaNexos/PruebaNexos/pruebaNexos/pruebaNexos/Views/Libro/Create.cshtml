@model BLL.DTO.LibroDTO

@{ ViewData["Title"] = "View";
    Layout = "~/Pages/Shared/_Layout.cshtml"; }

@using (Html.BeginForm())
{@Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", placeholder = "Titulo" } })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Genero, new { htmlAttributes = new { @class = "form-control", placeholder = "Genero" } })
                            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdAutor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IdAutor", ViewBag.Autor as SelectList, "Seleccione", new { @class = "form-control", id = "IdAutor" })


                            @Html.ValidationMessageFor(model => model.IdAutor, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NumeroPaginas, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumeroPaginas, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumeroPaginas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Anio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Anio, new { htmlAttributes = new { @class = "form-control", placeholder = "Año" } })
                            @Html.ValidationMessageFor(model => model.Anio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>
                </div>}

@Html.ActionLink("Volver", "Index")




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
